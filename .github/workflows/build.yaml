name: Build
on: [push, pull_request]

env:
  GITHUB_SHA: ${{ github.sha }}
  IMAGE: shelman/run-with-secrets
  REGISTRY_HOSTNAME: quay.io
  REGISTRY_USERNAME: shelman+githubbot
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  reviewdog-github-check:
    name: reviewdog (github-check)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Add $GOPATH/bin
        run: |
          echo ::add-path::$(go env GOPATH)/bin
      - uses: actions/checkout@v2

      - name: Install linters
        run: '( cd linters && go get golang.org/x/lint/golint )'

      - name: Setup reviewdog
        run: |
          # mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $HOME/bin
          # echo ::add-path::$HOME/bin
          go install ./cmd/reviewdog
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          golint ./... | reviewdog -f=golint -name=golint-github-check -reporter=github-check -level=warning

  misspell:
    name: runner / misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.github_token }}
          locale: "US"
          reporter: github-check

  golangci-lint:
    if: github.event_name == 'pull_request'
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: reviewdog/action-golangci-lint@v1
        with:
          github_token: ${{ secrets.github_token }}
          golangci_lint_flags: "--enable-all --exclude-use-default=false"
          level: "warning"
          reporter: github-pr-check


  build:
    name: Build ${{ github.ref }}
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: go build -v .

    - name: Build docker image
      run: |
        docker build \
          --label "github/commit-ref=${{ github.ref }}" \
          --label "github/commit-sha=${{ github.sha }}" \
          --label "github/repository=${{ github.repository }}" \
          -t "$REGISTRY_HOSTNAME"/"$IMAGE":"$GITHUB_SHA" .

    - name: Publish docker image
      if:  github.ref == 'refs/heads/master'
      run: |
        docker login -u "$REGISTRY_USERNAME" -p "$REGISTRY_PASSWORD" "$REGISTRY_HOSTNAME"
        docker push $REGISTRY_HOSTNAME/$IMAGE:$GITHUB_SHA
        docker tag $REGISTRY_HOSTNAME/$IMAGE:$GITHUB_SHA $REGISTRY_HOSTNAME/$IMAGE:latest
        docker push $REGISTRY_HOSTNAME/$IMAGE:latest
